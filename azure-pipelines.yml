## MFA pipeline. 

name: $(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  major: '0.1.'
  # define b as a counter with the prefix as variable a, and seed as 10.
  minor: $[counter(variables['major'], 1)]

steps:

- script: |
    ls -al $(Pipeline.Workspace)
    pushd gluu-server/opt/gluu/jetty/oxauth/custom
    tar -czv --owner=root --group=root -f $(Pipeline.Workspace)/s/gluu-server/opt/dist/signincanada/custom.tgz *
    popd
  displayName: 'Packaging UI'
  continueOnError: false

- script: |
    echo 'Downloading AppInsights SDK'
    wget https://github.com/microsoft/ApplicationInsights-Java/releases/download/2.6.2/applicationinsights-core-2.6.2.jar \
       -P gluu-server/opt/dist/signincanada
    echo 'Downloading AppInsights Agent'
    wget https://github.com/microsoft/ApplicationInsights-Java/releases/download/3.1.0/applicationinsights-agent-3.1.0.jar \
       -P gluu-server/opt/azure
  displayName: 'Downloading AppInsights'
  continueOnError: false

- script: |
    mkdir -p gluu-server/opt/dist/app
    wget https://corretto.aws/downloads/latest/amazon-corretto-11-x64-linux-jdk.tar.gz \
      -P gluu-server/opt/dist/app
    wget  https://corretto.aws/downloads/latest/amazon-corretto-11-x64-linux-jdk.tar.gz.sig \
      -P $(Agent.TempDirectory)
    echo 'Checking file integritiy'
    gpg2 --keyserver hkp://pool.sks-keyservers.net --recv-keys B04F24E3
    gpg2 --verify $(Agent.TempDirectory)/amazon-corretto-11-x64-linux-jdk.tar.gz.sig gluu-server/opt/dist/app/amazon-corretto-11-x64-linux-jdk.tar.gz
    displayName: 'Downloading Latest Amazon Corretto'
    continueOnError: false

- script: |
    wget https://repo1.maven.org/maven2/com/couchbase/client/core-io/1.7.19/core-io-1.7.19.jar \
      -P gluu-server/opt/dist/app
    wget https://repo1.maven.org/maven2/com/couchbase/client/core-io/1.7.19/core-io-1.7.19.jar.asc \
      -P $(Agent.TempDirectory)
      wget https://repo1.maven.org/maven2/com/couchbase/client/java-client/2.7.19/java-client-2.7.19.jar \
      -P gluu-server/opt/dist/app
    wget https://repo1.maven.org/maven2/com/couchbase/client/java-client/2.7.19/java-client-2.7.19.jar.asc \
      -P $(Agent.TempDirectory)
    echo 'Checking download integrity'
    gpg2 --keyserver hkp://pool.sks-keyservers.net --recv-keys D65B0D0F
    gpg2 --verify $(Agent.TempDirectory)/core-io-1.7.19.jar.asc gluu-server/opt/dist/app/core-io-1.7.19.jar
    gpg2 --verify $(Agent.TempDirectory)/java-client-2.7.19.jar.asc gluu-server/opt/dist/app/java-client-2.7.19.jar
    echo 'Passed'
  displayName: 'Downlaoding the latest Couchbase client'
  continueOnError: false

- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'specific'
    project: '7302639f-e704-47c3-9557-99b4e04a75bc'
    pipeline: '351'
    buildVersionToDownload: 'latest'
    artifactName: 'node-services'
    targetPath: '$(Pipeline.Workspace)/s/gluu-server/opt/dist/signincanada'
  displayName: 'Downloading node-services tarball'
 
- script: |
    echo 'packaging tarball'
    chmod 755 $(find . -type d -print)
    chmod 644 $(find . -type f -print)
    chmod 700 gluu-server/opt/dist/signincanada/postinstall.sh
    chmod 700 gluu-server/opt/dist/scripts/azure/keyvault.sh
    chmod 755 gluu-server/opt/dist/scripts/notify
    chmod 700 gluu-server/install/community-edition-setup/setup.py
    pushd gluu-server
    tar -czv --owner=root --group=root -f $(Build.ArtifactStagingDirectory)/SIC-MFA-0.1.$(minor).tgz --exclude='opt/gluu' etc install opt
    openssl sha256 $(Build.ArtifactStagingDirectory)/SIC-MFA-0.1.$(minor).tgz > $(Build.ArtifactStagingDirectory)/SIC-MFA-0.1.$(minor).tgz.sha
    popd
  displayName: 'Packaging tarball'
  continueOnError: true

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifact: 'mfa'
    publishLocation: 'pipeline'